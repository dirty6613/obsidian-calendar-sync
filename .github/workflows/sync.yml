name: Sync ICS from Gist

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download obsidian.ics from Gist
        run: |
          curl -L "https://gist.githubusercontent.com/dirty6613/7f7e071ef111f1225742cdcdcdcd841bb9/raw/obsidian.ics" -o obsidian.ics

      - name: Add calendar events for VTODOs without DTSTART
        run: |
          python3 <<EOF
from datetime import datetime, timedelta

input_path = "obsidian.ics"
output_path = "obsidian.ics"

def clean_summary(summary):
    summary = summary.strip("🔲⭐⚠️💡❗✅").strip()
    summary = summary.split(" #")[0].strip()
    return summary or "Untitled"

with open(input_path, "r") as f:
    lines = f.readlines()

today = datetime.utcnow().strftime("%Y%m%d")
tomorrow = (datetime.utcnow() + timedelta(days=1)).strftime("%Y%m%d")

final_lines = []
vtodo_block = []
in_vtodo = False
has_dtstart = False
summary = None

for line in lines:
    if line.startswith("BEGIN:VTODO"):
        in_vtodo = True
        vtodo_block = [line]
        has_dtstart = False
        summary = None
    elif line.startswith("END:VTODO") and in_vtodo:
        vtodo_block.append(line)
        in_vtodo = False
        # Only inject a VEVENT if VTODO lacks date
        if not has_dtstart and summary:
            final_lines.append("BEGIN:VEVENT\n")
            final_lines.append(f"UID:{datetime.utcnow().timestamp()}@obsidian-vtodo\n")
            final_lines.append(f"DTSTAMP:{datetime.utcnow().strftime('%Y%m%dT%H%M%SZ')}\n")
            final_lines.append(f"DTSTART;VALUE=DATE:{today}\n")
            final_lines.append(f"DTEND;VALUE=DATE:{tomorrow}\n")
            final_lines.append(f"SUMMARY:{clean_summary(summary)}\n")
            final_lines.append("END:VEVENT\n")
        final_lines.extend(vtodo_block)
    elif in_vtodo:
        vtodo_block.append(line)
        if line.startswith("DTSTART"):
            has_dtstart = True
        elif line.startswith("SUMMARY:"):
            summary = line[8:].strip()
    else:
        final_lines.append(line)

with open(output_path, "w") as f:
    for line in final_lines:
        f.write(line)
EOF

      - name: Commit and push changes
        run: |
          git config user.name "sync-bot"
          git config user.email "bot@users.noreply.github.com"
          git add obsidian.ics
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update obsidian.ics from Gist (VTODOs mirrored)"
            git push
          fi
