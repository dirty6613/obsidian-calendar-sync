name: Sync ICS from Gist

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download obsidian.ics from Gist
        run: |
          curl -L "https://gist.githubusercontent.com/dirty6613/7f7e071ef111f1225742cdcdcd841bb9/raw/obsidian.ics" -o obsidian.ics

      - name: Sanitize and inject DTEND
        run: |
          python3 <<EOF
          from datetime import datetime, timedelta
      
          with open("obsidian.ics", "r") as f:
              lines = f.readlines()
      
          output = []
          in_event = False
          has_dtstart = False
          has_dtend = False
          dtstart_val = ""
      
          for line in lines:
              if line.startswith("LOCATION:"):
                  continue  # Strip LOCATION
              elif line.startswith("BEGIN:VEVENT"):
                  in_event = True
                  has_dtstart = False
                  has_dtend = False
                  dtstart_val = ""
                  output.append(line)
              elif line.startswith("DTSTART"):
                  dtstart_val = line.strip().split(":")[-1]
                  has_dtstart = True
                  output.append(line)
              elif line.startswith("DTEND"):
                  has_dtend = True
                  output.append(line)
              elif line.startswith("SUMMARY:"):
                  summary = line.strip()[8:]
                  summary = summary.lstrip("🔲⭐⚠️💡❗✅").split(" #")[0].strip()
                  output.append(f"SUMMARY:{summary}\n")
              elif line.startswith("END:VEVENT"):
                  if in_event and has_dtstart and not has_dtend and len(dtstart_val) == 8:
                      dt_obj = datetime.strptime(dtstart_val, "%Y%m%d") + timedelta(days=1)
                      dtend_val = dt_obj.strftime("%Y%m%d")
                      output.append(f"DTEND;VALUE=DATE:{dtend_val}\n")
                  output.append(line)
                  in_event = False
              else:
                  output.append(line)
      
          with open("obsidian.ics", "w") as f:
              f.writelines(output)
          EOF

      - name: Commit and push changes
        run: |
          git config user.name "sync-bot"
          git config user.email "bot@users.noreply.github.com"
          git add obsidian.ics
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update obsidian.ics from Gist (cleaned)"
            git push
          fi
